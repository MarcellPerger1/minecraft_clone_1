name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, '**workflows?**' ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    if: >-
      ${{ !((github.event_name == 'pull_request' 
          && contains(github.event.pull_request.title, '[ci-skip]'))
        || (github.event_name == 'push' 
          && contains(github.event.head_commit.message, '[ci-skip]'))) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ./package-lock.json
      - run: npm install
      - name: Run tests
        id: run_tests
        run: |
          chmod +x ./scripts/test.sh
          npm test -- --colors;
      - name: Check if need to upload diff
        if: ${{ always() }}
        id: check_output
        run: |
          echo "After test"
          if test -e ./test/e2e/__image_snapshots__/__diff_output__ && test -n "$(ls -A ./test/e2e/__image_snapshots__/__diff_output__)" ; then
            HAS_DIFF=1
          else
            HAS_DIFF=0
          fi
          echo $HAS_DIFF
          echo "HAS_IMG_DIFF=$HAS_DIFF" >> "$GITHUB_OUTPUT"
      - name: Upload image diff
        uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.check_output.outputs.HAS_IMG_DIFF == 1 }}
        with:
          name: image-snapshot-diff
          path: test/e2e/__image_snapshots__/__diff_output__
  
  linter:
    runs-on: ubuntu-latest
    if: >-
      ${{ !((github.event_name == 'pull_request' 
          && contains(github.event.pull_request.title, '[ci-skip]'))
        || (github.event_name == 'push' 
          && contains(github.event.head_commit.message, '[ci-skip]'))) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ./package-lock.json
      - name: Install npm pacakges
        run: npm ci
      # see https://www.npmjs.com/package/eslint#installation-and-usage
      - name: Run eslint
        run: ./node_modules/.bin/eslint --max-warnings 0 ./
      - name: Run custom linters
        run: node ./scripts/find_bad_import.js

  check_formatted:
    runs-on: ubuntu-latest
    if: >-
      ${{ !((github.event_name == 'pull_request' 
          && contains(github.event.pull_request.title, '[ci-skip]'))
        || (github.event_name == 'push' 
          && contains(github.event.head_commit.message, '[ci-skip]'))) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ./package-lock.json
      - name: Install npm pacakges
        run: npm ci
      - name: Check that code is formatted
        id: check_format
        run: npm run format_check
      - name: Report files that would be changed
        if: always() && steps.check_format.outcome == 'failure'
        run: |
          npm run format
          echo Error: formatter would change these files:
          git diff HEAD --color
  
  build:
    runs-on: ubuntu-latest
    if: >-
      ${{ !((github.event_name == 'pull_request' 
          && contains(github.event.pull_request.title, '[ci-skip]'))
        || (github.event_name == 'push' 
          && contains(github.event.head_commit.message, '[ci-skip]'))) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ./package-lock.json
      - name: Install npm pacakges
        run: npm ci
      - name: Build libs
        run: |
          chmod +x ./scripts/build_libs.sh
          ./scripts/build_libs.sh
      - name: Build `.ts` files
        run: chmod +x ./scripts/build_ts.sh && ./scripts/build_ts.sh
      - name: Generate texture atlas
        run: node ./scripts/make_atlas.js
        
      - name: Commit texture atlas
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Commit built files [generated]"
